import { useState, useEffect } from "react";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Progress } from "@/components/ui/progress";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Separator } from "@/components/ui/separator";
import { 
  Shield, 
  AlertTriangle, 
  CheckCircle, 
  Clock, 
  TrendingUp, 
  GitBranch, 
  Code, 
  ExternalLink,
  Calendar,
  Download,
  Activity,
  Zap
} from "lucide-react";
import { Vulnerability, ReleaseNotesComparison } from "@shared/schema";
import { ReleaseNotesComparison as ReleaseNotesComponent } from "./ReleaseNotesComparison";
import { CVEDetailsCard } from './CVEDetailsCard';
import { AlternativePackagesCard } from './AlternativePackagesCard';
import { DependencyHierarchy } from './DependencyHierarchy';

interface VulnerabilityDetailsModalProps {
  vulnerability: Vulnerability | null;
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

interface PackageDetails {
  name: string;
  currentVersion: string;
  latestVersion: string;
  recommendedVersion: string;
  weeklyDownloads: number;
  lastPublished: string;
  maintainerStatus: 'active' | 'inactive' | 'deprecated';
  hasBreakingChanges: boolean;
  alternatives?: string[];
  deprecationInfo?: {
    message: string;
    date: string;
    isDeprecated: boolean;
  };
  usageInProject: {
    filesAffected: number;
    methodsUsed: string[];
    importPatterns: string[];
  };
  upgradeComplexity: 'low' | 'medium' | 'high';
  estimatedWork: string;
}

export function VulnerabilityDetailsModal({ vulnerability, open, onOpenChange }: VulnerabilityDetailsModalProps) {
  const [packageDetails, setPackageDetails] = useState<PackageDetails | null>(null);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    if (vulnerability && open) {
      fetchPackageDetails(vulnerability.package);
    }
  }, [vulnerability, open]);

  const fetchPackageDetails = async (packageName: string) => {
    setLoading(true);
    try {
      const response = await fetch(`/api/package-details/${packageName}`);
      if (response.ok) {
        const data = await response.json();
        setPackageDetails(data);
      }
    } catch (error) {
      console.error('Failed to fetch package details:', error);
      // Mock data for demonstration
      setPackageDetails({
        name: packageName,
        currentVersion: vulnerability?.version || "unknown",
        latestVersion: "4.17.21",
        recommendedVersion: vulnerability?.fixedIn || "latest",
        weeklyDownloads: 28500000,
        lastPublished: "2023-08-15",
        maintainerStatus: 'active',
        hasBreakingChanges: false,
        usageInProject: {
          filesAffected: vulnerability?.usageAnalysis?.filesAffected || 3,
          methodsUsed: vulnerability?.usageAnalysis?.methodsUsed || ['get', 'pick', 'merge'],
          importPatterns: ['require("lodash")', 'import _ from "lodash"']
        },
        upgradeComplexity: vulnerability?.usageAnalysis?.migrationRisk || 'low',
        estimatedWork: '2-4 hours'
      });
    } finally {
      setLoading(false);
    }
  };

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'critical': return 'bg-red-100 text-red-800 border-red-200';
      case 'high': return 'bg-orange-100 text-orange-800 border-orange-200';
      case 'moderate': return 'bg-yellow-100 text-yellow-800 border-yellow-200';
      case 'low': return 'bg-blue-100 text-blue-800 border-blue-200';
      default: return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  const getComplexityColor = (complexity: string) => {
    switch (complexity) {
      case 'high': return 'text-red-600';
      case 'medium': return 'text-yellow-600';
      case 'low': return 'text-green-600';
      default: return 'text-gray-600';
    }
  };

  const getComplexityProgress = (complexity: string) => {
    switch (complexity) {
      case 'high': return 85;
      case 'medium': return 50;
      case 'low': return 20;
      default: return 0;
    }
  };

  if (!vulnerability) return null;

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-hidden">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-3">
            <Shield className="w-5 h-5" />
            {vulnerability.id}
            
          </DialogTitle>
        </DialogHeader>

        <ScrollArea className="max-h-[80vh]">
          <div className="space-y-6">
            {/* Vulnerability Overview */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <AlertTriangle className="w-4 h-4" />
                  Vulnerability Overview
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <h4 className="font-medium text-gray-900 mb-2">Description</h4>
                  <p className="text-gray-700 leading-relaxed">{vulnerability.description}</p>
                </div>
                
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <h4 className="font-medium text-gray-900 mb-1">Package</h4>
                    <p className="text-gray-700">{vulnerability.package}</p>
                  </div>
                  <div>
                    <h4 className="font-medium text-gray-900 mb-1">Version</h4>
                    <p className="text-gray-700">{vulnerability.version}</p>
                  </div>
                </div>

                {vulnerability.cvss && (
                  <div>
                    <h4 className="font-medium text-gray-900 mb-1">CVSS Score</h4>
                    <div className="flex items-center gap-2">
                      <span className="text-lg font-bold text-red-600">{vulnerability.cvss}</span>
                      <span className="text-gray-500">/ 10.0</span>
                    </div>
                  </div>
                )}

                {vulnerability.cveDetails && (
                  <div className="flex flex-wrap gap-2">
                    {vulnerability.cveDetails.hasExploit && (
                      <Badge variant="destructive" className="flex items-center gap-1">
                        <Zap className="w-3 h-3" />
                        Exploit Available
                      </Badge>
                    )}
                    {vulnerability.cveDetails.patchAvailable && (
                      <Badge variant="secondary" className="flex items-center gap-1">
                        <CheckCircle className="w-3 h-3" />
                        Patch Available
                      </Badge>
                    )}
                  </div>
                )}
              </CardContent>
            </Card>

            <Tabs defaultValue="fix" className="w-full">
              <TabsList className="grid w-full grid-cols-5">
                <TabsTrigger value="fix">Fix Information</TabsTrigger>
                <TabsTrigger value="recommendation">Recommendation</TabsTrigger>
                <TabsTrigger value="impact">Impact Analysis</TabsTrigger>
                <TabsTrigger value="release-notes">Release Comparison</TabsTrigger>
                <TabsTrigger value="upgrade">Upgrade Guide</TabsTrigger>
              </TabsList>

              <TabsContent value="cve" className="space-y-4">
                {vulnerability.cveDetails ? (
                  <CVEDetailsCard 
                    cveDetails={vulnerability.cveDetails}
                    riskScore={vulnerability.riskScore}
                    priorityLevel={vulnerability.priorityLevel}
                  />
                ) : vulnerability.cve ? (
                  <Card>
                    <CardContent className="py-8 text-center">
                      <Shield className="h-12 w-12 mx-auto text-gray-400 mb-4" />
                      <h3 className="text-lg font-semibold mb-2">CVE Details Loading</h3>
                      <p className="text-gray-600">
                        Fetching detailed information for {vulnerability.cve}...
                      </p>
                    </CardContent>
                  </Card>
                ) : (
                  <Card>
                    <CardContent className="py-8 text-center">
                      <Shield className="h-12 w-12 mx-auto text-gray-400 mb-4" />
                      <h3 className="text-lg font-semibold mb-2">No CVE Information</h3>
                      <p className="text-gray-600">
                        This vulnerability does not have an associated CVE identifier.
                      </p>
                    </CardContent>
                  </Card>
                )}
              </TabsContent>

              <TabsContent value="fix" className="space-y-4">
                {/* Dependency Hierarchy Information */}
                <DependencyHierarchy
                  packageName={vulnerability.package}
                  isDirect={vulnerability.isDirect ?? true}
                  dependencyPath={vulnerability.dependencyPath}
                />
                
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <CheckCircle className="w-4 h-4" />
                      Fix Information
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div>
                      <h4 className="font-medium text-gray-900 mb-2">Fixed In Version</h4>
                      <p className="text-lg font-semibold text-green-600">
                        {vulnerability.fixedIn || 'Not specified'}
                      </p>
                    </div>

                    {packageDetails && (
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <h4 className="font-medium text-gray-900 mb-1">Latest Version</h4>
                          <p className="text-gray-700">{packageDetails.latestVersion}</p>
                        </div>
                        <div>
                          <h4 className="font-medium text-gray-900 mb-1">Last Published</h4>
                          <p className="text-gray-700 flex items-center gap-1">
                            <Calendar className="w-3 h-3" />
                            {packageDetails.lastPublished}
                          </p>
                        </div>
                      </div>
                    )}

                    {vulnerability.references && vulnerability.references.length > 0 && (
                      <div>
                        <h4 className="font-medium text-gray-900 mb-2">References</h4>
                        <div className="space-y-1">
                          {vulnerability.references.slice(0, 3).map((ref, index) => (
                            <a
                              key={index}
                              href={ref.url}
                              target="_blank"
                              rel="noopener noreferrer"
                              className="flex items-center gap-2 text-blue-600 hover:text-blue-800 text-sm"
                            >
                              <ExternalLink className="w-3 h-3" />
                              {ref.url}
                            </a>
                          ))}
                        </div>
                      </div>
                    )}
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="recommendation" className="space-y-4">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <TrendingUp className="w-4 h-4" />
                      Recommended Action
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    {packageDetails && (
                      <>
                        {/* Show deprecation warning and alternatives if package is deprecated */}
                        {packageDetails.maintainerStatus === 'deprecated' && packageDetails.alternatives && (
                          <AlternativePackagesCard
                            packageName={vulnerability.package}
                            alternatives={packageDetails.alternatives}
                            deprecationInfo={packageDetails.deprecationInfo}
                          />
                        )}
                        
                        {/* Regular upgrade info for non-deprecated packages */}
                        {packageDetails.maintainerStatus !== 'deprecated' && (
                          <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                            <h4 className="font-medium text-green-900 mb-2">Recommended Version</h4>
                            <p className="text-lg font-semibold text-green-700">
                              {packageDetails.recommendedVersion}
                            </p>
                            <p className="text-sm text-green-600 mt-1">
                              This version fixes the vulnerability and maintains compatibility
                            </p>
                          </div>
                        )}

                        <div className="grid grid-cols-3 gap-4">
                          <div className="text-center">
                            <div className="flex items-center justify-center mb-2">
                              <Download className="w-5 h-5 text-blue-600" />
                            </div>
                            <p className="text-sm font-medium text-gray-900">Weekly Downloads</p>
                            <p className="text-lg font-bold text-blue-600">
                              {(packageDetails.weeklyDownloads / 1000000).toFixed(1)}M
                            </p>
                          </div>
                          <div className="text-center">
                            <div className="flex items-center justify-center mb-2">
                              <Activity className="w-5 h-5 text-green-600" />
                            </div>
                            <p className="text-sm font-medium text-gray-900">Maintenance</p>
                            <p className={`text-lg font-bold ${
                              packageDetails.maintainerStatus === 'active' ? 'text-green-600' : 
                              packageDetails.maintainerStatus === 'deprecated' ? 'text-red-600' : 'text-orange-600'
                            }`}>
                              {packageDetails.maintainerStatus}
                            </p>
                          </div>
                          <div className="text-center">
                            <div className="flex items-center justify-center mb-2">
                              <GitBranch className="w-5 h-5 text-purple-600" />
                            </div>
                            <p className="text-sm font-medium text-gray-900">Breaking Changes</p>
                            <p className={`text-lg font-bold ${
                              packageDetails.hasBreakingChanges ? 'text-red-600' : 'text-green-600'
                            }`}>
                              {packageDetails.hasBreakingChanges ? 'Yes' : 'No'}
                            </p>
                          </div>
                        </div>
                      </>
                    )}
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="impact" className="space-y-4">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Code className="w-4 h-4" />
                      Project Impact Analysis
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    {/* Show actual usage analysis if available, otherwise show message */}
                    {vulnerability.usageAnalysis && vulnerability.usageAnalysis.filesAffected > 0 ? (
                      <>
                        <div>
                          <h4 className="font-medium text-gray-900 mb-2">Actual Usage in Your Project</h4>
                          <div className="grid grid-cols-2 gap-4">
                            <div className="bg-blue-50 p-4 rounded-lg">
                              <div className="flex items-center gap-2 mb-2">
                                <Code className="w-4 h-4 text-blue-600" />
                                <span className="font-medium text-blue-900">Files Affected</span>
                              </div>
                              <div className="text-2xl font-bold text-blue-700">
                                {vulnerability.usageAnalysis.filesAffected}
                              </div>
                            </div>
                            <div className="bg-purple-50 p-4 rounded-lg">
                              <div className="flex items-center gap-2 mb-2">
                                <Zap className="w-4 h-4 text-purple-600" />
                                <span className="font-medium text-purple-900">Methods Used</span>
                              </div>
                              <div className="text-2xl font-bold text-purple-700">
                                {vulnerability.usageAnalysis.methodsUsed?.length || 0}
                              </div>
                            </div>
                          </div>
                        </div>

                        <div>
                          <h4 className="font-medium text-gray-900 mb-2">Vulnerable Methods Used in Your Code</h4>
                          {vulnerability.usageAnalysis.methodsUsed && vulnerability.usageAnalysis.methodsUsed.length > 0 ? (
                            <div className="flex flex-wrap gap-2">
                              {vulnerability.usageAnalysis.methodsUsed.map((method, index) => (
                                <Badge key={index} variant="secondary" className="bg-red-50 text-red-700 border-red-200">
                                  {method}
                                </Badge>
                              ))}
                            </div>
                          ) : (
                            <div className="bg-gray-50 border border-gray-200 rounded-lg p-3">
                              <p className="text-sm text-gray-600">
                                We don't have specific vulnerable methods information for this package. 
                                This could mean the vulnerability affects the entire package or the analysis couldn't detect specific method usage.
                              </p>
                            </div>
                          )}
                        </div>

                        <div>
                          <h4 className="font-medium text-gray-900 mb-2 flex items-center gap-2">
                            <AlertTriangle className="w-4 h-4 text-orange-500" />
                            Migration Risk Assessment
                          </h4>
                          <div className="flex items-center gap-4">
                            <Badge className={
                              vulnerability.usageAnalysis.migrationRisk === 'high' ? 'bg-red-100 text-red-800' :
                              vulnerability.usageAnalysis.migrationRisk === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                              'bg-green-100 text-green-800'
                            }>
                              {vulnerability.usageAnalysis.migrationRisk.toUpperCase()} RISK
                            </Badge>
                            <span className="text-sm text-gray-600">
                              Complexity Score: {vulnerability.usageAnalysis.complexityScore}/100
                            </span>
                          </div>
                        </div>
                      </>
                    ) : (
                      <div className="bg-gray-50 p-6 rounded-lg text-center">
                        <Code className="w-12 h-12 text-gray-400 mx-auto mb-3" />
                        <h4 className="font-medium text-gray-900 mb-2">Code Usage Analysis Not Available</h4>
                        <p className="text-gray-600 mb-4">
                          We don't have detailed code usage information for this package. This could happen when analyzing package.json only without source code files.
                        </p>
                        <div className="text-sm text-gray-500 space-y-1">
                          <p>• Upload your project as a ZIP file to see detailed analysis</p>
                          <p>• See exact file locations and line numbers</p>
                          <p>• Identify specific vulnerable methods in use</p>
                          <p>• Get migration risk assessment</p>
                        </div>
                      </div>
                    )}

                    {/* Detailed Usage Locations - Only show if we have actual usage data */}
                    {vulnerability.usageAnalysis?.fileUsage && vulnerability.usageAnalysis.fileUsage.length > 0 && (
                      <div>
                        <h4 className="font-medium text-gray-900 mb-3 flex items-center gap-2">
                          <Code className="w-4 h-4" />
                          Vulnerable Code Locations
                        </h4>
                        <div className="space-y-4">
                          {vulnerability.usageAnalysis.fileUsage.map((fileUsage, index) => (
                            <div key={index} className="border rounded-lg p-4 bg-gradient-to-r from-red-50 to-orange-50 border-red-200">
                              <div className="flex items-center gap-2 mb-3">
                                <Code className="w-4 h-4 text-red-600" />
                                <span className="font-medium text-gray-900">{fileUsage.fileName}</span>

                              </div>
                              
                              {fileUsage.importStatements && fileUsage.importStatements.length > 0 && (
                                <div className="mb-3">
                                  <p className="text-sm font-medium text-gray-700 mb-2">Import Statements:</p>
                                  {fileUsage.importStatements.map((stmt, stmtIndex) => (
                                    <code key={stmtIndex} className="block text-sm bg-white p-2 rounded border font-mono text-green-600 mb-1">
                                      {stmt}
                                    </code>
                                  ))}
                                </div>
                              )}
                              
                              {fileUsage.usageExamples && fileUsage.usageExamples.length > 0 && (
                                <div className="mb-3">
                                  <p className="text-sm font-medium text-gray-700 mb-2">Vulnerable Code Usage:</p>
                                  <div className="space-y-2">
                                    {fileUsage.usageExamples.slice(0, 5).map((usage, usageIndex) => (
                                      <code key={usageIndex} className="block text-sm bg-white p-3 rounded border font-mono text-red-600 border-red-200">
                                        {usage}
                                      </code>
                                    ))}
                                    {fileUsage.usageExamples.length > 5 && (
                                      <p className="text-sm text-gray-500 italic">
                                        ... and {fileUsage.usageExamples.length - 5} more usage examples
                                      </p>
                                    )}
                                  </div>
                                </div>
                              )}
                              
                              {fileUsage.lineNumbers && fileUsage.lineNumbers.length > 0 && (
                                <div>
                                  <p className="text-sm font-medium text-gray-700 mb-2">Line Numbers:</p>
                                  <div className="flex flex-wrap gap-2">
                                    {fileUsage.lineNumbers.slice(0, 15).map((lineNum, lineIndex) => (
                                      <Badge key={lineIndex} variant="outline" className="text-xs bg-white border-red-300 text-red-700">
                                        Line {lineNum}
                                      </Badge>
                                    ))}
                                    {fileUsage.lineNumbers.length > 15 && (
                                      <span className="text-sm text-gray-500">
                                        +{fileUsage.lineNumbers.length - 15} more lines
                                      </span>
                                    )}
                                  </div>
                                </div>
                              )}
                            </div>
                          ))}
                        </div>
                      </div>
                    )}

                    {/* Package Details Section */}
                    {packageDetails && (
                      <>
                        <Separator />
                        <div>
                          <h4 className="font-medium text-gray-900 mb-2">Package Information</h4>
                          <div className="grid grid-cols-2 gap-4">
                            <div>
                              <p className="text-sm text-gray-600">Current Version</p>
                              <p className="text-lg font-semibold text-gray-900">
                                {vulnerability.version}
                              </p>
                            </div>
                            <div>
                              <p className="text-sm text-gray-600">Recommended Version</p>
                              <p className="text-lg font-semibold text-green-600">
                                {packageDetails.recommendedVersion}
                              </p>
                            </div>
                          </div>
                        </div>

                        <div>
                          <h4 className="font-medium text-gray-900 mb-2">Upgrade Information</h4>
                          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">

                            <p className="text-sm text-blue-700">
                              <strong>Breaking Changes:</strong> {packageDetails.hasBreakingChanges ? 'Yes' : 'No'}
                            </p>
                          </div>
                        </div>
                      </>
                    )}
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="release-notes" className="space-y-4">
                {vulnerability.releaseNotesComparison ? (
                  <ReleaseNotesComponent comparison={vulnerability.releaseNotesComparison} />
                ) : (
                  <Card>
                    <CardContent className="py-8 text-center">
                      <GitBranch className="h-12 w-12 mx-auto text-gray-400 mb-4" />
                      <h3 className="text-lg font-semibold mb-2">Release Notes Analysis Unavailable</h3>
                      <p className="text-gray-600">
                        Unable to fetch or analyze release notes for this package version comparison.
                      </p>
                    </CardContent>
                  </Card>
                )}
              </TabsContent>

              <TabsContent value="upgrade" className="space-y-4">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <Clock className="w-4 h-4" />
                      Upgrade Estimation
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    {packageDetails && (
                      <>
                        <div>
                          <h4 className="font-medium text-gray-900 mb-2">Complexity Assessment</h4>
                          <div className="space-y-2">
                            <div className="flex items-center justify-between">
                              <span className="text-sm text-gray-600">Upgrade Complexity</span>
                              <span className={`font-medium ${getComplexityColor(packageDetails.upgradeComplexity)}`}>
                                {packageDetails.upgradeComplexity.toUpperCase()}
                              </span>
                            </div>
                            <Progress 
                              value={getComplexityProgress(packageDetails.upgradeComplexity)} 
                              className="w-full"
                            />
                          </div>
                        </div>



                        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                          <h4 className="font-medium text-blue-900 mb-2">Upgrade Steps</h4>
                          <ol className="list-decimal list-inside space-y-1 text-sm text-blue-700">
                            <li>Update package.json with recommended version</li>
                            <li>Run npm install to update dependencies</li>
                            <li>Test affected functionality in {packageDetails.usageInProject.filesAffected} files</li>
                            <li>Update any deprecated method calls if needed</li>
                            <li>Run full test suite to ensure compatibility</li>
                          </ol>
                        </div>

                        {packageDetails.maintainerStatus !== 'deprecated' ? (
                          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                            <h4 className="font-medium text-yellow-900 mb-2">Migration Command</h4>
                            <code className="block bg-yellow-100 rounded px-3 py-2 text-sm text-yellow-800">
                              npm install {vulnerability.package}@{packageDetails.recommendedVersion}
                            </code>
                          </div>
                        ) : (
                          <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                            <h4 className="font-medium text-red-900 mb-2">⚠️ Package is Deprecated</h4>
                            <p className="text-sm text-red-700 mb-2">
                              This package is no longer maintained. Consider migrating to one of the alternatives shown in the Fix tab.
                            </p>
                            <code className="block bg-red-100 rounded px-3 py-2 text-sm text-red-800">
                              # Remove deprecated package
                              npm uninstall {vulnerability.package}
                            </code>
                          </div>
                        )}
                      </>
                    )}
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>

            <div className="flex justify-end gap-3 pt-4 border-t">
              <Button variant="outline" onClick={() => onOpenChange(false)}>
                Close
              </Button>
              <Button className="bg-blue-600 hover:bg-blue-700">
                Generate Migration Plan
              </Button>
            </div>
          </div>
        </ScrollArea>
      </DialogContent>
    </Dialog>
  );
}